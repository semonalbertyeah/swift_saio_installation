======================
dependencies
======================
sudo yum install epem-release
sudo yum update
sudo yum install curl gcc memcached rsync sqlite xfsprogs git-core\
                 libffi-devel xinetd liberasurecode-devel \
                 python-setuptools \
                 python-coverage python-devel python-nose \
                 pyxattr python-eventlet \
                 python-greenlet python-paste-deploy \
                 python-netifaces python-pip python-dns \
                 python-mock


======================
prepare partition
=======================

------------------------
1. use a partition
------------------------
! prepare an hhd or ssd (sdb)

! create an partition sdb1
$ sudo fdisk /dev/sdb
fdisk> (command): n
...

! make file system -> XFS
$ sudo mkfs.xfs /dev/sdb1

! edit /etc/fstab -> mount table
/dev/sdb1 /mnt/sdb1 xfs noatime,nodiratime,nobarrier,logbufs=8 0 0

! create mount point and the individual links
$ sudo mkdir /mnt/sdb1
$ sudo mount /mnt/sdb1
$ sudo mkdir /mnt/sdb1/1 /mnt/sdb1/2 /mnt/sdb1/3 /mnt/sdb1/4
$ sudo chown ${USER}:${USER} /mnt/sdb1/*
$ sudo mkdir /srv
$ for x in {1..4}; do sudo ln -s /mnt/sdb1/$x /srv/$x; done
$ sudo mkdir -p /srv/1/node/sdb1 /srv/1/node/sdb5 \
              /srv/2/node/sdb2 /srv/2/node/sdb6 \
              /srv/3/node/sdb3 /srv/3/node/sdb7 \
              /srv/4/node/sdb4 /srv/4/node/sdb8 \
              /var/run/swift
$ sudo chown -R ${USER}:${USER} /var/run/swift
# **Make sure to include the trailing slash after /srv/$x/**
$ for x in {1..4}; do sudo chown -R ${USER}:${USER} /srv/$x/; done

-------------------------
2. use a loopback device
-------------------------
! create the folder for the loopback device
$ sudo mkdir /srv
$ sudo truncate -s 1GB /srv/swift-disk
$ sudo mkfs.xfs /srv/swift-disk

! edit /etc/fstab -> mount tab
/srv/swift-disk /mnt/sdb1 xfs loop,noatime,nodiratime,nobarrier,logbuf=8 0 0

! create the mount point and the individualized links
$ sudo mkdir /mnt/sdb1
$ sudo mount /mnt/sdb1
$ sudo mkdir /mnt/sdb1/1 /mnt/sdb1/2 /mnt/sdb1/3 /mnt/sdb1/4
$ sudo chown ${USER}:${USER} /mnt/sdb1/*
$ for x in {1..4}; do sudo ln -s /mnt/sdb1/$x /srv/$x; done
$ sudo mkdir -p /srv/1/node/sdb1 /srv/1/node/sdb5 \
                /srv/2/node/sdb2 /srv/2/node/sdb6 \
                /srv/3/node/sdb3 /srv/3/node/sdb7 \
                /srv/4/node/sdb4 /srv/4/node/sdb8 \
                /var/run/swift
$ sudo chown -R ${USER}:${USER} /var/run/swift
# **Make sure to include the trailing slash after /srv/$x/**
for x in {1..4}; do sudo chown -R ${USER}:${USER} /srv/$x/; done

----------------------
post-device setup
----------------------
! add the following lines to /etc/rc.local
mkdir -p /var/cache/swift /var/cache/swift2 /var/cache/swift3 /var/cache/swift4
chown <your-user-name>:<your-group-name> /var/cache/swift*
mkdir -p /var/run/swift
chown <your-user-name>:<your-group-name> /var/run/swift


=====================
 get the code
=====================
! get python-swiftclient
$ cd $HOME; git clone https://github.com/openstack/python-swiftclient.git

! build a develop installation
$ cd $HOME/python-swiftclient; sudo python setup.py develop; cd -

! get swift
$ cd $HOME; git clone https://github.com/openstack/swift.git

! install requirements -> build a develop installation
$ cd $HOME/swift; sudo pip install -r requirements; sudo python setup.py develop; cd -

! install swift's test requirements
$ cd $HOME/swift; sudo pip install -r test-requirements.txt

========================================
rsync: used to sync files between hosts
 installed above (dependencies)
========================================
! use rsyncd.conf configured swift
$ sudo cp $HOME/swift/doc/saio/rsyncd.conf /etc/
$ sudo sed -i "s/<your-user-name>/${USER}/" /etc/rsyncd.conf

! df




